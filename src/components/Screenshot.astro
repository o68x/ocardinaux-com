---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Icon from "./Icon.astro";

export interface Props {
  src: ImageMetadata;
  url: string;
  alt: string;
  backside: string;
  class?: string;
}

const { src, url, alt, backside, class: className } = Astro.props;

// test if link is anchor link
const isAnchorLink =url?.startsWith("#");

const filename = src.src.split("/").pop();
const filenameWithoutExtension = filename?.split(".")[0];

// extract domain fromm url
const domain = url?.replace(/^(?:https?:\/\/)?(?:[^@\n]+@)?(?:www\.)?([^:/\n]+)/, "$1");
---

<div
  class:list={[className, "screenshot swiper-slide show-home cut-out"]}
  id={filenameWithoutExtension}
  data-img="screenshot"
  tabindex="0"
>
  <figure>
    <Image src={src} alt={alt} style=`aspect-ratio: ${src.width / src.height};` />
    <figcaption>
      <!-- Adapt link to anchor -->
      <a href={isAnchorLink ? url : `${url}?ref=ocx`} title="Nouvelle fenÃªtre" target={isAnchorLink ? "_self" : "_blank"}>{alt || domain}</a>
    </figcaption>
    <div class="rotate-icon">
      <Icon icon="arrows-clockwise" />
    </div>
  </figure>
  <div class="backside">
    <p>
      <Fragment set:html={backside} />
    </p>
  </div>
</div>

<style>
  @keyframes show-backside {
    0% {
      transform: rotate3d(20, 40, 0, 30deg);
      opacity: 1;
    }

    100% {
      transform: rotate3d(20, 40, 0, 90deg) scale(0.5);
      opacity: 0;
    }
  }

  @keyframes show-frontside {
    0% {
      transform: rotate3d(20, 40, 0, 90deg) scale(0.5);
      opacity: 0;
    }

    100% {
      transform: rotate3d(20, 40, 0, 30deg);
      opacity: 1;
    }
  }

  .screenshot {
    z-index: 1;
    flex: 0 0 max(340px, 35vw);
    margin-inline: var(--s-3);
    cursor: pointer;

    & > figure {
      padding: var(--s-1);
      position: relative;
      transition: background-color 0.2s ease;
    }

    & figcaption {
      --_border-color: transparent;

      text-align: center;
      font-size: var(--s-2);

      & a {
        border: 1px solid var(--_border-color);
        border-radius: var(--s-1);
        color: var(--color-fern);
        padding: var(--s-5) var(--s-2);
        cursor: default;
        text-decoration: none;
        transition: all 0.5s ease;
      }
    }

    &.show-back figcaption a[href] {
      --_border-color: var(--color-fern);

      cursor: pointer;

      &:hover {
        background-color: var(--color-light-bone);
      }
    }

    & img {
      width: 100%;
      transform: rotate3d(20, 40, 0, 30deg);
      filter: drop-shadow(var(--s-5) var(--s-5) 10px rgb(0 0 0 / 20%));
      transform-origin: center;
      height: auto;
      object-fit: contain;
      padding: var(--s-5);
      will-change: transform;
      transition: filter 0.5s ease-in-out;
    }

    & .backside {
      position: absolute;
      inset: 0;
      opacity: 0;
      pointer-events: none;
      display: grid;
      grid-template-columns: min(0, 1fr);
      place-items: center;
      transition: opacity 0.2s ease-in;
      font-size: var(--s-1);
      padding: var(--s-3);
      color: var(--color-very-dark-bone);
    }

    &.show-back:has(.backside) {
      img {
        animation-name: show-backside;
        animation-duration: 0.4s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: both;
      }

      .backside {
        opacity: 1;
      }
    }

    &.show-home:has(.backside) {
      img {
        animation-name: show-frontside;
        animation-duration: 0.2s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: both;
      }

      .backside {
        opacity: 0;
      }
    }

    &:hover {
      & figure {
      background-color: var(--color-bone);
      }

      & .rotate-icon {
        transform: translate(-10%, -5%) scale(1) rotate(270deg);
        opacity: 1;
      }
    }
  }

  /* stylelint-disable-next-line no-descending-specificity */
  .rotate-icon {
    position: absolute;
    top: 0;
    right: 0;
    transform: translate(-10%, -10%) scale(0.5) rotate(90deg);
    opacity: 0;
    transition: opacity 0.2s ease-in, transform 0.3s ease-in;
    will-change: transform;
  }
</style>

<script>
  const imgWrapper = document.querySelector(".swiper-wrapper");

  imgWrapper?.addEventListener("click", (event) => {
    const otherParents = imgWrapper.querySelectorAll("[data-img='screenshot']");
    // get the elements that are not the target
    // get the parent with class swiper-slide
    if (event.target instanceof Element) {
      const parent = event.target.closest(".swiper-slide");
      const notTarget = [...otherParents].filter((el) => el !== parent);
      parent?.classList.toggle("show-back");
      parent?.classList.toggle("show-home");
      notTarget.forEach((el) => {
        el.classList.remove("show-back");
        el.classList.add("show-home");
      });
    }
  });
</script>
