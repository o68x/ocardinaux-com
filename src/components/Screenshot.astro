---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

export interface Props {
  src: ImageMetadata;
  link?: string;
  alt: string;
  class?: string;
}

const { src, link, alt, class: className } = Astro.props;

const filename = src.src.split("/").pop();
const filenameWithoutExtension = filename?.split(".")[0];

const hasContent = Astro.slots.has("default");
---

<div
  class:list={[className, "screenshot swiper-slide show-home"]}
  id={filenameWithoutExtension}
  data-img="screenshot"
  tabindex="0"
>
  <figure>
    <Image
      src={src}
      alt={alt}
      style=`aspect-ratio: ${src.width / src.height};`
    />
    <figcaption><a href={link} target="_blank">{alt}</a></figcaption>
  </figure>
  {hasContent && <div class="backside"><slot /></div>}
</div>

<style>
  @keyframes show-backside {
    0% {
      transform: rotate3d(20, 40, 0, 30deg);
      opacity: 1;
    }
    100% {
      transform: rotate3d(20, 40, 0, 90deg) scale(0.5);
      opacity: 0;
    }
  }

  @keyframes show-frontside {
    0% {
      transform: rotate3d(20, 40, 0, 90deg) scale(0.5);
      opacity: 0;
    }
    100% {
      transform: rotate3d(20, 40, 0, 30deg);
      opacity: 1;
    }
  }

  .screenshot {
    z-index: 1;
    flex: 0 0 max(340px, 35vw);
    margin-inline: var(--s-3);

    & > figure {
      padding: var(--s-1);
      position: relative;
      transition: background-color 0.2s ease;
    }

    & figcaption {
      --_border-color: transparent;
      text-align: center;
      font-size: var(--s-2);

      & a {
        border: 1px solid var(--_border-color);
        border-radius: var(--s-1);
        color: var(--color-fern);
        padding: var(--s-5) var(--s-2);
        cursor: default;
        text-decoration: none;
        transition: all 0.5s ease;
      }
    }

    &.show-back figcaption a[href] {
      --_border-color: var(--color-fern);
      cursor: pointer;
    }

    & img {
      width: 100%;
      transform: rotate3d(20, 40, 0, 30deg);
      filter: drop-shadow(var(--s-5) var(--s-5) 10px rgb(0 0 0 / 0.2));
      transform-origin: center;
      height: auto;
      object-fit: contain;
      padding: var(--s-5);
      will-change: transform;
      transition: filter 0.5s ease-in-out;
    }

    & .backside {
      position: absolute;
      top: 0;
      left: 0;
      opacity: 0;
      transition: opacity 0.2s ease-in;
      font-size: var(--s-1);
      font-variation-settings: "wght" 400, "wdth" 75;
      padding: var(--s-3);
      color: var(--color-very-dark-bone);
    }

    &.show-back:has(.backside) {
      img {
        animation-name: show-backside;
        animation-duration: 0.4s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: both;
      }

      .backside {
        opacity: 1;
      }
    }

    &.show-home:has(.backside) {
      img {
        animation-name: show-frontside;
        animation-duration: 0.2s;
        animation-timing-function: ease-in-out;
        animation-fill-mode: both;
      }

      .backside {
        opacity: 0;
      }
    }

    &:hover figure {
      background-color: var(--color-bone);
    }
  }
</style>

<script>
  const imgs = document.querySelectorAll("[data-img='screenshot']");
  const imgWrapper = document.querySelector(".swiper-wrapper");

  // Use mouseenter/mouseleave events for desktop
  // imgs.forEach((img) => {
  //   img.addEventListener("click", () => {
  //     img.classList.toggle("show-back");
  //     img.classList.toggle("show-home");
  //   });
  // });

  imgWrapper?.addEventListener("click", (event) => {
    const otherParents = imgWrapper.querySelectorAll("[data-img='screenshot']");
    // get the elements that are not the target
    // get the parent with class swiper-slide
    if (event.target instanceof Element) {
      const parent = event.target.closest(".swiper-slide");
      const notTarget = [...otherParents].filter((el) => el !== parent);
      parent?.classList.toggle("show-back");
      parent?.classList.toggle("show-home");
      notTarget.forEach((el) => {
        el.classList.remove("show-back");
        el.classList.add("show-home");
      });
    }
  })
</script>
