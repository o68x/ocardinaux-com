---
// @ts-ignore
import { getEntry, render } from "astro:content";

export interface Props {
  id: string,
}

const { id } = Astro.props;

const entry = await getEntry("sections", id);
const { Content } = await render(entry);

---

<section id={id}>
  <figure class="section-image">
    <slot />
  </figure>
  <Content frontmatter={entry.data} />
  <figure class="section-separator">
    <slot name="separator" />
  </figure>
</section>

<style is:global>
  section {
    position: relative;
    min-height: 100vh;
    max-width: min(1200px, calc(100% - 2 * var(--s2)));
    margin-inline: auto;
    padding-block-end: 10vh;
    margin-block-start: var(--s4);
    font-size: var(--s2);
    display: grid;
    grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
    grid-template-rows: min-content max-content minmax(0, 1fr) max-content;
    gap: var(--s1);
    place-items: center stretch;
  }

  .tldr {
    grid-row: 1 / 2;
    grid-column: 1 / 2;

    @media screen and (width < 768px) {
      grid-column: 1 / 3;
      grid-row: 1 / 2;
    }
  }

  .section-image {
    grid-row: 1 / 2;
    grid-column: 2 / 3;

    & img {
      width: 50%;
      min-width: 180px;
      height: auto;
      object-fit: contain;
      mix-blend-mode: multiply;
      margin-inline: auto;
    }

    @media screen and (width < 768px) {
      display: none;
    }
  }

  .section-body {
    grid-row: 2 / 3;
    grid-column: 1 / 3;
    width: 100%;
  }

  .section-separator {
    grid-row: 4 / 5;
    grid-column: 1 / 3;
    place-self: center;
    padding-block-start: 5vh;

    & img {
      width: 50%;
      min-width: 180px;
      height: auto;
      object-fit: contain;
      mix-blend-mode: multiply;
      margin-inline: auto;
    }
  }
</style>
