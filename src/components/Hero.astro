---
import { Image, getImage } from "astro:assets";
import Icon from "../components/Icon.astro";
import ThemeToggle from "./ThemeToggle.astro";
import astronomyFig from "../assets/images/astronomy-fig-38.webp";
// import WIP from "./WIP.astro";
---

<div class="hero">
  <ThemeToggle />
  <div class="name">
    <svg class="title" viewBox="0 0 600 400" width="100%" height="auto" style="fill: transparent;">
        <path id="curve" d="
          M150,300
          a 300 120 0 1 1 300 0" />
      <text width="300">
        <textPath dominant-baseline="middle" startOffset="50%" xlink:href="#curve" text-anchor="middle" style="fill: currentcolor;">
          OLIVIER CARDINAUX
        </textPath>
      </text>
    </svg>
  </div>
  <figure
    class="astronomy-fig"
    style=`aspect-ratio: ${astronomyFig.width / astronomyFig.height};`
  >
    <Image
      src={astronomyFig}
      alt="" loading="eager"
      width="600"
    />
  </figure>
  <div class="line">
    <p class="subtitle">Construction de sites internet</p>
    <p>Paris · Lausanne · L'Isle-sur-la-Sorgue</p>
    <!-- <WIP /> -->
  </div>
  <div class="more">
    <span>
      <Icon icon="caret-double-down" />
    </span>
  </div>
</div>

<style>
  :global(theme-toggle) {
    position: fixed;
    top: 0;
    right: 0;
    padding: var(--s-1);
    z-index: 100;
  }

  .hero {
    position: relative;
    padding-top: 10vh;
    min-height: 100vh;
    min-height: 100dvh;
    display: grid;
    grid-template-columns: minmax(0, 1fr);
    grid-template-rows: minmax(max-content, 50vh) minmax(0, 1fr) max-content;
    overflow: clip;
  }

  .name,
  .astronomy-fig,
  .line {
    width: clamp(300px, 50vw, 600px);
    place-self: start center;
  }

  .name,
  .astronomy-fig {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    place-self: end center;
  }

  .name {
    transform: translateY(-10%);
    font-family: var(--ff-heading);
    font-size: var(--s3);
    letter-spacing: -0.02em;
  }

  .subtitle {
    font-family: var(--ff-base-light);
    font-size: var(--s1);
    letter-spacing: 0.2em;
  }

  .astronomy-fig > img {
    object-fit: contain;
    height: auto;
    mix-blend-mode: var(--fig-blend-mode);
      opacity: var(--fig-opacity);
  }

  .line {
    margin-top: var(--s3);
    font-size: var(--s-2);
    letter-spacing: 0.3em;
    text-align: center;
    text-wrap: balance;
    text-transform: uppercase;
    line-height: 1;
    display: flex;
    flex-direction: column;
    align-items: center;

    :global(theme-toggle) {
      padding-top: var(--s-1);
    }

    & p {
      margin-top: var(--s-4);
    }
  }

  /* ----------------------------------------------
 * Modified from Animista on 2024-11-1 4:18:21
 * Licensed under FreeBSD License.
 * ---------------------------------------------- */

  @keyframes bounce-top {
    0% {
      transform: translateY(-13px);
      animation-timing-function: ease-in;
      opacity: 1;
    }

    12% {
      opacity: 1;
    }

    20% {
      transform: translateY(-8px);
      animation-timing-function: ease-in;
    }

    32% {
      transform: translateY(-5px);
      animation-timing-function: ease-in;
    }

    41% {
      transform: translateY(-3px);
      animation-timing-function: ease-in;
    }

    46% {
      transform: translateY(-2px);
      animation-timing-function: ease-in;
    }

    13%,
    27%,
    38%,
    44% {
      transform: translateY(0);
      animation-timing-function: ease-out;
    }

    50% {
      transform: translateY(0);
      animation-timing-function: ease-out;
      opacity: 1;
    }
  }

  .more {
    font-size: var(--s0);
    font-weight: 900;
    text-align: center;
    padding: 1em;
    animation: bounce-top 5s infinite;

    &.faded-out {
      animation: more-fade-out 1s;
      animation-fill-mode: forwards;
    }
  }

  @keyframes more-fade-out {
    0% {
      opacity: 1;
      transform: scale(1);
    }

    100% {
      opacity: 0;
      transform: scale(0);
    }
  }
</style>

<script>
  const more = document.querySelector(".more");
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("faded-out");
        }
      });
    },
    { rootMargin: "-200px" },
  );
  if (more) observer.observe(more);
</script>
