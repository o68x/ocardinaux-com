---
import type { ImageMetadata } from "astro";
import { getImage } from "astro:assets";

interface Props {
  imageData: ImageMetadata;
  link: string;
  text?: string;
}

const { imageData, link } = Astro.props;

// remove https//
const linkText = link.split("https://")[1] || "";

function getFilename(imageData: ImageMetadata) {
  return imageData.src.split("/").pop()?.split(".")[0] || "";
}

const image = await getImage({ src: imageData, format: "webp" });
const id = getFilename(imageData);
const altText = link.split("https://")[1] || "";
---

<span>
<span class="link" data-img={id}>{linkText}</span>
<div class="content visually-hidden" id={id}>
  <div class="screenshot">
    <img
      src={image.src}
      alt=`Capture de page de ${altText || ""}`
      loading="eager"
    />
    <a href={link} target="_blank">Visiter</a>
  </div>
</div>
</span>

<style>
  .link {
    text-decoration: underline;
    cursor: pointer;
  }

  .screenshot > a {
    display: block;
    padding: var(--s-3) var(--s-2);
    padding-right: var(--s-1);
    background-color: var(--color-fern);
    color: var(--color-bone);
    border: 1px solid var(--color-bone);
    font-size: var(--s1);
    font-weight: 600;
    text-transform: uppercase;
    font-style: italic;
    text-shadow: none;
    border-radius: 4px;
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, calc(var(--s-2) * -1));
    transition: all 0.3s ease-in-out;

    &::after {
      content: " X";
      opacity: 0.3;
      transition: all 0.3s ease-in-out;
    }

    &:hover {
      border: 1px solid var(--color-fern);

      &::after {
        opacity: 1;
      }
    }
  }
</style>
